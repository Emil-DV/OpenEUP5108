v3.0 hex words addressed
##  The Sequencer ROM contains the instruction sequences using 32 bit control words
##  Pattern:
##  0x00000000
##    ||||||||- Instruction/Address Control bits:
##    |||||||     Load IR (1) Increment IP (2) Toggle DR/SP (4) Toggle DR/SP Bank (8) 
##    |||||||-- Stack/System Operations bits:
##    ||||||      Decrement SP (1) Increment SP (2) ALU Reset line (4) Systems Ops Flag (8)
##    ||||||--- ALU Function/Inputs expression bits:
##    |||||       ALU Function Out (1) Use ALU Function Constant (2) ALU Inputs out (4) Use ALU Input Constant (8)
##    |||||---- IRH(Load)/IRL(OE) expression bits:
##    ||||        IRH out (1) Use IRH Constant (2) IRL out (4) Use IRL Constant (8)
##    ||||----- ALU Function Constant
##    |||------ ALU Inputs Constant
##    ||------- IRH(Load) Constant
##    |-------- IRL(OE) Constant
##
##    In the absense of any other OE, the constant ROM is enabled, the address for the constant rom is the ALU Inputs:
##    See Consts.ROM
##    Inputs:  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
##     Const: 00 01 02 04 06 08 10 20 40 80 00 00 00 0F F0 FF
##
##  Boot Sequence
##  A=0      B=0      R=0      D=0      P=0      I=0      OE c FF  K=FF     
00: 0300F000 0400F000 0600F000 0700F000 0800F000 0900F000 00F0CC00 0AF0FC00 
    S=FF     OE EROM  T=ROM(IP) IP++    I=ROM(IP) OE T    P=T      OE ROM   
08: 0BF0FC00 1000C000 1500F000 1000C002 1900F000 5000C000 5800F000 1000C000 
    Load IR
10: 1000C001 

##  W*F/L*F
11: 1000C00A 1000D000 1000C008 1000C001  

##  System Operations
    ExOp/IP++  Load IR
15: 1000C482 1000C001 

##  RTL
18: 2000C024 2900F000 2000C020 2800F000 1000C004 1000C002 1000C000 1000C002 
20: 1000C000 1000C002 1000C000 1000C001 

##  L*E
24: 00004002 00005000 1000C002 1000C001  

##  LAZ/O/H
30: 00000440 03003400 1000C002 1000C001 
##  LBZ/O/H
34: 00000440 04003400 1000C002 1000C001
##  LTZ/O/H
38: 00000440 05003400 1000C002 1000C001 
##  LDZ
3C: 00000440 06003400 07003400 1000C002 1000C001  

##  SC*              
42: 00004006 02007000 1000C004 1060CC80 1000C020 1000C001  

##  L**/W** 
48: 00004000 00005002 1000C000 1000C001  

##  SE* 
4C: 00004008 01007002 1000C008 1000C001  

##  CAL - Saves IP on Stack and falls through to JPL
50: 8000C004 8200F000 9000C010 9200F020 00000014 00000020
##  JPL  JLC  JLN  JLR
56: 1000C002 1500F000 1000C002 1900F000 5000C000 5800F000 1000C000 1000C001  

##  JPS  JSC  JSN  JSR
60: 1000C002 1000C300 1800F300 1000C001  

##  SI*/RI*
65: 00004002 02007000 1000C000 1000C001 

##  L*I/W*I
6A: 2000C000 2000D002 1000C000 1000C001  

##  DEA/B INA/B Loads T with 1 then falls through to byte math
70: 00100C00 0510FC00 
##  ALU Logic & Math
72: 00000440 1000C502 1000C001  

##  IND/DED Loads T with 1 then falls through to word math
80: 00100C00 0510FC00 
##  ED* MD*
82: 00000440 00000500 00000000 05003C02 00E00C02 10E0CD00 
88: 1000C001  

##  Special System Operation for DES
    ExOp/IP++  Load IR
8A: 1000C482 1000C020 1000C001 

##  BT0/1/2/3 Loads port value into A and falls through to BTA
90: 00004000 03007000
##  BTA  BTB  BSA  BSB
92: 1000C002 1500F000 00000440 1000C502 1000C001  

##  BCA  BCB
98: 1000C002 1500F000 00500C40 00530F00 00000440 1000C502 1000C001 

##  XDS
    LTS               LSD               LDT               LTK
A0: B000C000 B500F000 7000C000 7B00F000 5000C000 5700F000 A000C000 A500F000
    LKR               LRT               
A8: 6000C000 6A00F000 5000C000 5600F000 1000C002 1000C001  

##  LDR
    IP++     LRE      IP++     LDE      IP++     Load IR
B0: 1000C002 1600F000 1000C002 1700F000 1000C002 1000C001 

##  IRQ - Pushes P,I,R,D,T,B,A on the Stack, Stows ALU Flags, and goes to the address in the vector table
C0: 8000C004 8200F000 9000C010 9200F020 6000C010 6200F020 7000C010 7200F020
C8: 5000C010 5200F020 4000C010 4200F020 3000C010 3200F020 00F00C94 00000020
##  I=00     P=ALUi   P=const  OE ROM   T=rom(IP) IP++    I=rom(ip) OE T    P=T      OE ROM   Load IR
D0: 0900F000 00000400 0800F400 1000C000 1500F000 1000C002 1900F000 5000C000 5800F000 1000C000 1000C001 

##  RTI - Pops A,B,T,D,R,I,P off the Stack and goes to the saved address and loads the IR
DF: 2000C024 2300F000 2000C020 2400F000 2000C020 2500F000 2000C020 2700F000 2000C020 2600F000 2000C020 2900F000 2000C020 2800F000
##  OE ROM   IP++     Load IR
ED: 10E0CC84 1000C002 10F0CC81 

##  POE
    LRP               LDS               IP++     LTE               EDT   
F0: A000C000 A600F000 B000C000 B700F000 1000C002 1000C000 1500F000 00E00C40 
     
F8: 00E50F00 00000000 05003C00 00E00C00 00E50F02 1000C001             